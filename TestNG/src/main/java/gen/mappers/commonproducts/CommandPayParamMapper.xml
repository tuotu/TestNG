<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="gen.mappers.commonproducts.CommandPayParamDAO" >
  <!--
   WARNING  - DONT MODIFY ANY GENERATED ELEMENTS IN THIS FILE
   if you want to add  new function ,plesae add a new element without  mbggenerated annotation marked comment
   the file generated by MyBatis Generator.
   @author bohr.qiu
  -->
  <resultMap id="BaseResultMap" type="gen.doproject.commonproducts.CommandPayParamDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="merchant_id" property="merchantId" jdbcType="VARCHAR" />
    <result column="share_limit" property="shareLimit" jdbcType="VARCHAR" />
    <result column="quota" property="quota" jdbcType="VARCHAR" />
    <result column="freeze_time" property="freezeTime" jdbcType="VARCHAR" />
    <result column="refund_charge" property="refundCharge" jdbcType="VARCHAR" />
    <result column="to_bank" property="toBank" jdbcType="VARCHAR" />
    <result column="merchant_mark" property="merchantMark" jdbcType="VARCHAR" />
    <result column="need_jump_bank" property="needJumpBank" jdbcType="VARCHAR" />
    <result column="operator_name" property="operatorName" jdbcType="VARCHAR" />
    <result column="to_card_freeze_time" property="toCardFreezeTime" jdbcType="VARCHAR" />
    <result column="raw_add_time" property="rawAddTime" jdbcType="TIMESTAMP" />
    <result column="raw_update_time" property="rawUpdateTime" jdbcType="TIMESTAMP" />
    <result column="refund_audit" property="refundAudit" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    id, merchant_id, share_limit, quota, freeze_time, refund_charge, to_bank, merchant_mark, 
    need_jump_bank, operator_name, to_card_freeze_time, raw_add_time, raw_update_time, 
    refund_audit
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="gen.doproject.commonproducts.CommandPayParamDOExample" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from command_pay_param
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select 
    <include refid="Base_Column_List" />
    from command_pay_param
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    delete from command_pay_param
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="gen.doproject.commonproducts.CommandPayParamDOExample" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    delete from command_pay_param
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="gen.doproject.commonproducts.CommandPayParamDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into command_pay_param (merchant_id, share_limit, quota, 
      freeze_time, refund_charge, to_bank, 
      merchant_mark, need_jump_bank, operator_name, 
      to_card_freeze_time, raw_add_time, raw_update_time, 
      refund_audit)
    values (#{merchantId,jdbcType=VARCHAR}, #{shareLimit,jdbcType=VARCHAR}, #{quota,jdbcType=VARCHAR}, 
      #{freezeTime,jdbcType=VARCHAR}, #{refundCharge,jdbcType=VARCHAR}, #{toBank,jdbcType=VARCHAR}, 
      #{merchantMark,jdbcType=VARCHAR}, #{needJumpBank,jdbcType=VARCHAR}, #{operatorName,jdbcType=VARCHAR}, 
      #{toCardFreezeTime,jdbcType=VARCHAR}, #{rawAddTime,jdbcType=TIMESTAMP}, #{rawUpdateTime,jdbcType=TIMESTAMP}, 
      #{refundAudit,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="gen.doproject.commonproducts.CommandPayParamDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into command_pay_param
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="merchantId != null" >
        merchant_id,
      </if>
      <if test="shareLimit != null" >
        share_limit,
      </if>
      <if test="quota != null" >
        quota,
      </if>
      <if test="freezeTime != null" >
        freeze_time,
      </if>
      <if test="refundCharge != null" >
        refund_charge,
      </if>
      <if test="toBank != null" >
        to_bank,
      </if>
      <if test="merchantMark != null" >
        merchant_mark,
      </if>
      <if test="needJumpBank != null" >
        need_jump_bank,
      </if>
      <if test="operatorName != null" >
        operator_name,
      </if>
      <if test="toCardFreezeTime != null" >
        to_card_freeze_time,
      </if>
      <if test="rawAddTime != null" >
        raw_add_time,
      </if>
      <if test="rawUpdateTime != null" >
        raw_update_time,
      </if>
      <if test="refundAudit != null" >
        refund_audit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="merchantId != null" >
        #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="shareLimit != null" >
        #{shareLimit,jdbcType=VARCHAR},
      </if>
      <if test="quota != null" >
        #{quota,jdbcType=VARCHAR},
      </if>
      <if test="freezeTime != null" >
        #{freezeTime,jdbcType=VARCHAR},
      </if>
      <if test="refundCharge != null" >
        #{refundCharge,jdbcType=VARCHAR},
      </if>
      <if test="toBank != null" >
        #{toBank,jdbcType=VARCHAR},
      </if>
      <if test="merchantMark != null" >
        #{merchantMark,jdbcType=VARCHAR},
      </if>
      <if test="needJumpBank != null" >
        #{needJumpBank,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null" >
        #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="toCardFreezeTime != null" >
        #{toCardFreezeTime,jdbcType=VARCHAR},
      </if>
      <if test="rawAddTime != null" >
        #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null" >
        #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundAudit != null" >
        #{refundAudit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="gen.doproject.commonproducts.CommandPayParamDOExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select count(*) from command_pay_param
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update command_pay_param
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.merchantId != null" >
        merchant_id = #{record.merchantId,jdbcType=VARCHAR},
      </if>
      <if test="record.shareLimit != null" >
        share_limit = #{record.shareLimit,jdbcType=VARCHAR},
      </if>
      <if test="record.quota != null" >
        quota = #{record.quota,jdbcType=VARCHAR},
      </if>
      <if test="record.freezeTime != null" >
        freeze_time = #{record.freezeTime,jdbcType=VARCHAR},
      </if>
      <if test="record.refundCharge != null" >
        refund_charge = #{record.refundCharge,jdbcType=VARCHAR},
      </if>
      <if test="record.toBank != null" >
        to_bank = #{record.toBank,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantMark != null" >
        merchant_mark = #{record.merchantMark,jdbcType=VARCHAR},
      </if>
      <if test="record.needJumpBank != null" >
        need_jump_bank = #{record.needJumpBank,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorName != null" >
        operator_name = #{record.operatorName,jdbcType=VARCHAR},
      </if>
      <if test="record.toCardFreezeTime != null" >
        to_card_freeze_time = #{record.toCardFreezeTime,jdbcType=VARCHAR},
      </if>
      <if test="record.rawAddTime != null" >
        raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawUpdateTime != null" >
        raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.refundAudit != null" >
        refund_audit = #{record.refundAudit,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update command_pay_param
    set id = #{record.id,jdbcType=INTEGER},
      merchant_id = #{record.merchantId,jdbcType=VARCHAR},
      share_limit = #{record.shareLimit,jdbcType=VARCHAR},
      quota = #{record.quota,jdbcType=VARCHAR},
      freeze_time = #{record.freezeTime,jdbcType=VARCHAR},
      refund_charge = #{record.refundCharge,jdbcType=VARCHAR},
      to_bank = #{record.toBank,jdbcType=VARCHAR},
      merchant_mark = #{record.merchantMark,jdbcType=VARCHAR},
      need_jump_bank = #{record.needJumpBank,jdbcType=VARCHAR},
      operator_name = #{record.operatorName,jdbcType=VARCHAR},
      to_card_freeze_time = #{record.toCardFreezeTime,jdbcType=VARCHAR},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      refund_audit = #{record.refundAudit,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="gen.doproject.commonproducts.CommandPayParamDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update command_pay_param
    <set >
      <if test="merchantId != null" >
        merchant_id = #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="shareLimit != null" >
        share_limit = #{shareLimit,jdbcType=VARCHAR},
      </if>
      <if test="quota != null" >
        quota = #{quota,jdbcType=VARCHAR},
      </if>
      <if test="freezeTime != null" >
        freeze_time = #{freezeTime,jdbcType=VARCHAR},
      </if>
      <if test="refundCharge != null" >
        refund_charge = #{refundCharge,jdbcType=VARCHAR},
      </if>
      <if test="toBank != null" >
        to_bank = #{toBank,jdbcType=VARCHAR},
      </if>
      <if test="merchantMark != null" >
        merchant_mark = #{merchantMark,jdbcType=VARCHAR},
      </if>
      <if test="needJumpBank != null" >
        need_jump_bank = #{needJumpBank,jdbcType=VARCHAR},
      </if>
      <if test="operatorName != null" >
        operator_name = #{operatorName,jdbcType=VARCHAR},
      </if>
      <if test="toCardFreezeTime != null" >
        to_card_freeze_time = #{toCardFreezeTime,jdbcType=VARCHAR},
      </if>
      <if test="rawAddTime != null" >
        raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null" >
        raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="refundAudit != null" >
        refund_audit = #{refundAudit,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="gen.doproject.commonproducts.CommandPayParamDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update command_pay_param
    set merchant_id = #{merchantId,jdbcType=VARCHAR},
      share_limit = #{shareLimit,jdbcType=VARCHAR},
      quota = #{quota,jdbcType=VARCHAR},
      freeze_time = #{freezeTime,jdbcType=VARCHAR},
      refund_charge = #{refundCharge,jdbcType=VARCHAR},
      to_bank = #{toBank,jdbcType=VARCHAR},
      merchant_mark = #{merchantMark,jdbcType=VARCHAR},
      need_jump_bank = #{needJumpBank,jdbcType=VARCHAR},
      operator_name = #{operatorName,jdbcType=VARCHAR},
      to_card_freeze_time = #{toCardFreezeTime,jdbcType=VARCHAR},
      raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP},
      refund_audit = #{refundAudit,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>