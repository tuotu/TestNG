<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="gen.mappers.commonproducts.BatchBehalfDAO" >
  <!--
   WARNING  - DONT MODIFY ANY GENERATED ELEMENTS IN THIS FILE
   if you want to add  new function ,plesae add a new element without  mbggenerated annotation marked comment
   the file generated by MyBatis Generator.
   @author bohr.qiu
  -->
  <resultMap id="BaseResultMap" type="gen.doproject.commonproducts.BatchBehalfDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="biz_no" property="bizNo" jdbcType="VARCHAR" />
    <result column="raw_add_time" property="rawAddTime" jdbcType="TIMESTAMP" />
    <result column="raw_update_time" property="rawUpdateTime" jdbcType="TIMESTAMP" />
    <result column="gid" property="gid" jdbcType="VARCHAR" />
    <result column="inlet" property="inlet" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="merchant_acc_no" property="merchantAccNo" jdbcType="VARCHAR" />
    <result column="merchant_card_no" property="merchantCardNo" jdbcType="VARCHAR" />
    <result column="merchant_order_no" property="merchantOrderNo" jdbcType="VARCHAR" />
    <result column="merchant_user_id" property="merchantUserId" jdbcType="VARCHAR" />
    <result column="product_code" property="productCode" jdbcType="VARCHAR" />
    <result column="product_status" property="productStatus" jdbcType="VARCHAR" />
    <result column="all_file_name" property="allFileName" jdbcType="VARCHAR" />
    <result column="all_file_path" property="allFilePath" jdbcType="VARCHAR" />
    <result column="behalf_amt" property="behalfAmt" jdbcType="BIGINT" typeHandler="core.generatorName.MoneyTypeHandler" />
    <result column="behalf_count" property="behalfCount" jdbcType="INTEGER" />
    <result column="counter_fee" property="counterFee" jdbcType="BIGINT" typeHandler="core.generatorName.MoneyTypeHandler" />
    <result column="fail_reason" property="failReason" jdbcType="VARCHAR" />
    <result column="failure_amt" property="failureAmt" jdbcType="BIGINT" typeHandler="core.generatorName.MoneyTypeHandler" />
    <result column="failure_count" property="failureCount" jdbcType="INTEGER" />
    <result column="freeze_no" property="freezeNo" jdbcType="VARCHAR" />
    <result column="frozen_no" property="frozenNo" jdbcType="VARCHAR" />
    <result column="item_counter_fee" property="itemCounterFee" jdbcType="BIGINT" typeHandler="core.generatorName.MoneyTypeHandler" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="success_amt" property="successAmt" jdbcType="BIGINT" typeHandler="core.generatorName.MoneyTypeHandler" />
    <result column="success_count" property="successCount" jdbcType="INTEGER" />
    <result column="file_fail_code" property="fileFailCode" jdbcType="VARCHAR" />
    <result column="fail_file_name" property="failFileName" jdbcType="VARCHAR" />
    <result column="fail_file_path" property="failFilePath" jdbcType="VARCHAR" />
    <result column="dubbo_group" property="dubboGroup" jdbcType="VARCHAR" />
    <result column="dubbo_version" property="dubboVersion" jdbcType="VARCHAR" />
    <result column="userEndIp" property="userendip" jdbcType="VARCHAR" />
    <result column="merch_order_no" property="merchOrderNo" jdbcType="VARCHAR" />
    <result column="behalf_type" property="behalfType" jdbcType="VARCHAR" />
    <result column="payer_user_id" property="payerUserId" jdbcType="VARCHAR" />
    <result column="behalf_count_public" property="behalfCountPublic" jdbcType="INTEGER" />
    <result column="item_counter_fee_public" property="itemCounterFeePublic" jdbcType="BIGINT" typeHandler="core.generatorName.MoneyTypeHandler" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.behalfAmtCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.counterFeeCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.failureAmtCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.itemCounterFeeCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.successAmtCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.itemCounterFeePublicCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.behalfAmtCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.counterFeeCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.failureAmtCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.itemCounterFeeCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.successAmtCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.itemCounterFeePublicCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    id, biz_no, raw_add_time, raw_update_time, gid, inlet, memo, merchant_acc_no, merchant_card_no, 
    merchant_order_no, merchant_user_id, product_code, product_status, all_file_name, 
    all_file_path, behalf_amt, behalf_count, counter_fee, fail_reason, failure_amt, failure_count, 
    freeze_no, frozen_no, item_counter_fee, name, success_amt, success_count, file_fail_code, 
    fail_file_name, fail_file_path, dubbo_group, dubbo_version, userEndIp, merch_order_no, 
    behalf_type, payer_user_id, behalf_count_public, item_counter_fee_public
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="gen.doproject.commonproducts.BatchBehalfDOExample" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from batch_behalf
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select 
    <include refid="Base_Column_List" />
    from batch_behalf
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    delete from batch_behalf
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="gen.doproject.commonproducts.BatchBehalfDOExample" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    delete from batch_behalf
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="gen.doproject.commonproducts.BatchBehalfDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    insert into batch_behalf (id, biz_no, raw_add_time, 
      raw_update_time, gid, inlet, 
      memo, merchant_acc_no, merchant_card_no, 
      merchant_order_no, merchant_user_id, product_code, 
      product_status, all_file_name, all_file_path, 
      behalf_amt, behalf_count, 
      counter_fee, 
      fail_reason, failure_amt, 
      failure_count, freeze_no, frozen_no, 
      item_counter_fee, 
      name, success_amt, 
      success_count, file_fail_code, fail_file_name, 
      fail_file_path, dubbo_group, dubbo_version, 
      userEndIp, merch_order_no, behalf_type, 
      payer_user_id, behalf_count_public, item_counter_fee_public
      )
    values (#{id,jdbcType=BIGINT}, #{bizNo,jdbcType=VARCHAR}, #{rawAddTime,jdbcType=TIMESTAMP}, 
      #{rawUpdateTime,jdbcType=TIMESTAMP}, #{gid,jdbcType=VARCHAR}, #{inlet,jdbcType=VARCHAR}, 
      #{memo,jdbcType=VARCHAR}, #{merchantAccNo,jdbcType=VARCHAR}, #{merchantCardNo,jdbcType=VARCHAR}, 
      #{merchantOrderNo,jdbcType=VARCHAR}, #{merchantUserId,jdbcType=VARCHAR}, #{productCode,jdbcType=VARCHAR}, 
      #{productStatus,jdbcType=VARCHAR}, #{allFileName,jdbcType=VARCHAR}, #{allFilePath,jdbcType=VARCHAR}, 
      #{behalfAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler}, #{behalfCount,jdbcType=INTEGER}, 
      #{counterFee,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler}, 
      #{failReason,jdbcType=VARCHAR}, #{failureAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler}, 
      #{failureCount,jdbcType=INTEGER}, #{freezeNo,jdbcType=VARCHAR}, #{frozenNo,jdbcType=VARCHAR}, 
      #{itemCounterFee,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler}, 
      #{name,jdbcType=VARCHAR}, #{successAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler}, 
      #{successCount,jdbcType=INTEGER}, #{fileFailCode,jdbcType=VARCHAR}, #{failFileName,jdbcType=VARCHAR}, 
      #{failFilePath,jdbcType=VARCHAR}, #{dubboGroup,jdbcType=VARCHAR}, #{dubboVersion,jdbcType=VARCHAR}, 
      #{userendip,jdbcType=VARCHAR}, #{merchOrderNo,jdbcType=VARCHAR}, #{behalfType,jdbcType=VARCHAR}, 
      #{payerUserId,jdbcType=VARCHAR}, #{behalfCountPublic,jdbcType=INTEGER}, #{itemCounterFeePublic,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler}
      )
  </insert>
  <insert id="insertSelective" parameterType="gen.doproject.commonproducts.BatchBehalfDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    insert into batch_behalf
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bizNo != null" >
        biz_no,
      </if>
      <if test="rawAddTime != null" >
        raw_add_time,
      </if>
      <if test="rawUpdateTime != null" >
        raw_update_time,
      </if>
      <if test="gid != null" >
        gid,
      </if>
      <if test="inlet != null" >
        inlet,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="merchantAccNo != null" >
        merchant_acc_no,
      </if>
      <if test="merchantCardNo != null" >
        merchant_card_no,
      </if>
      <if test="merchantOrderNo != null" >
        merchant_order_no,
      </if>
      <if test="merchantUserId != null" >
        merchant_user_id,
      </if>
      <if test="productCode != null" >
        product_code,
      </if>
      <if test="productStatus != null" >
        product_status,
      </if>
      <if test="allFileName != null" >
        all_file_name,
      </if>
      <if test="allFilePath != null" >
        all_file_path,
      </if>
      <if test="behalfAmt != null" >
        behalf_amt,
      </if>
      <if test="behalfCount != null" >
        behalf_count,
      </if>
      <if test="counterFee != null" >
        counter_fee,
      </if>
      <if test="failReason != null" >
        fail_reason,
      </if>
      <if test="failureAmt != null" >
        failure_amt,
      </if>
      <if test="failureCount != null" >
        failure_count,
      </if>
      <if test="freezeNo != null" >
        freeze_no,
      </if>
      <if test="frozenNo != null" >
        frozen_no,
      </if>
      <if test="itemCounterFee != null" >
        item_counter_fee,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="successAmt != null" >
        success_amt,
      </if>
      <if test="successCount != null" >
        success_count,
      </if>
      <if test="fileFailCode != null" >
        file_fail_code,
      </if>
      <if test="failFileName != null" >
        fail_file_name,
      </if>
      <if test="failFilePath != null" >
        fail_file_path,
      </if>
      <if test="dubboGroup != null" >
        dubbo_group,
      </if>
      <if test="dubboVersion != null" >
        dubbo_version,
      </if>
      <if test="userendip != null" >
        userEndIp,
      </if>
      <if test="merchOrderNo != null" >
        merch_order_no,
      </if>
      <if test="behalfType != null" >
        behalf_type,
      </if>
      <if test="payerUserId != null" >
        payer_user_id,
      </if>
      <if test="behalfCountPublic != null" >
        behalf_count_public,
      </if>
      <if test="itemCounterFeePublic != null" >
        item_counter_fee_public,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bizNo != null" >
        #{bizNo,jdbcType=VARCHAR},
      </if>
      <if test="rawAddTime != null" >
        #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null" >
        #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gid != null" >
        #{gid,jdbcType=VARCHAR},
      </if>
      <if test="inlet != null" >
        #{inlet,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="merchantAccNo != null" >
        #{merchantAccNo,jdbcType=VARCHAR},
      </if>
      <if test="merchantCardNo != null" >
        #{merchantCardNo,jdbcType=VARCHAR},
      </if>
      <if test="merchantOrderNo != null" >
        #{merchantOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="merchantUserId != null" >
        #{merchantUserId,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null" >
        #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="productStatus != null" >
        #{productStatus,jdbcType=VARCHAR},
      </if>
      <if test="allFileName != null" >
        #{allFileName,jdbcType=VARCHAR},
      </if>
      <if test="allFilePath != null" >
        #{allFilePath,jdbcType=VARCHAR},
      </if>
      <if test="behalfAmt != null" >
        #{behalfAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="behalfCount != null" >
        #{behalfCount,jdbcType=INTEGER},
      </if>
      <if test="counterFee != null" >
        #{counterFee,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="failReason != null" >
        #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="failureAmt != null" >
        #{failureAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="failureCount != null" >
        #{failureCount,jdbcType=INTEGER},
      </if>
      <if test="freezeNo != null" >
        #{freezeNo,jdbcType=VARCHAR},
      </if>
      <if test="frozenNo != null" >
        #{frozenNo,jdbcType=VARCHAR},
      </if>
      <if test="itemCounterFee != null" >
        #{itemCounterFee,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="successAmt != null" >
        #{successAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="successCount != null" >
        #{successCount,jdbcType=INTEGER},
      </if>
      <if test="fileFailCode != null" >
        #{fileFailCode,jdbcType=VARCHAR},
      </if>
      <if test="failFileName != null" >
        #{failFileName,jdbcType=VARCHAR},
      </if>
      <if test="failFilePath != null" >
        #{failFilePath,jdbcType=VARCHAR},
      </if>
      <if test="dubboGroup != null" >
        #{dubboGroup,jdbcType=VARCHAR},
      </if>
      <if test="dubboVersion != null" >
        #{dubboVersion,jdbcType=VARCHAR},
      </if>
      <if test="userendip != null" >
        #{userendip,jdbcType=VARCHAR},
      </if>
      <if test="merchOrderNo != null" >
        #{merchOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="behalfType != null" >
        #{behalfType,jdbcType=VARCHAR},
      </if>
      <if test="payerUserId != null" >
        #{payerUserId,jdbcType=VARCHAR},
      </if>
      <if test="behalfCountPublic != null" >
        #{behalfCountPublic,jdbcType=INTEGER},
      </if>
      <if test="itemCounterFeePublic != null" >
        #{itemCounterFeePublic,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="gen.doproject.commonproducts.BatchBehalfDOExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select count(*) from batch_behalf
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update batch_behalf
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bizNo != null" >
        biz_no = #{record.bizNo,jdbcType=VARCHAR},
      </if>
      <if test="record.rawAddTime != null" >
        raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawUpdateTime != null" >
        raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gid != null" >
        gid = #{record.gid,jdbcType=VARCHAR},
      </if>
      <if test="record.inlet != null" >
        inlet = #{record.inlet,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantAccNo != null" >
        merchant_acc_no = #{record.merchantAccNo,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantCardNo != null" >
        merchant_card_no = #{record.merchantCardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantOrderNo != null" >
        merchant_order_no = #{record.merchantOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantUserId != null" >
        merchant_user_id = #{record.merchantUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.productCode != null" >
        product_code = #{record.productCode,jdbcType=VARCHAR},
      </if>
      <if test="record.productStatus != null" >
        product_status = #{record.productStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.allFileName != null" >
        all_file_name = #{record.allFileName,jdbcType=VARCHAR},
      </if>
      <if test="record.allFilePath != null" >
        all_file_path = #{record.allFilePath,jdbcType=VARCHAR},
      </if>
      <if test="record.behalfAmt != null" >
        behalf_amt = #{record.behalfAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="record.behalfCount != null" >
        behalf_count = #{record.behalfCount,jdbcType=INTEGER},
      </if>
      <if test="record.counterFee != null" >
        counter_fee = #{record.counterFee,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="record.failReason != null" >
        fail_reason = #{record.failReason,jdbcType=VARCHAR},
      </if>
      <if test="record.failureAmt != null" >
        failure_amt = #{record.failureAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="record.failureCount != null" >
        failure_count = #{record.failureCount,jdbcType=INTEGER},
      </if>
      <if test="record.freezeNo != null" >
        freeze_no = #{record.freezeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.frozenNo != null" >
        frozen_no = #{record.frozenNo,jdbcType=VARCHAR},
      </if>
      <if test="record.itemCounterFee != null" >
        item_counter_fee = #{record.itemCounterFee,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.successAmt != null" >
        success_amt = #{record.successAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="record.successCount != null" >
        success_count = #{record.successCount,jdbcType=INTEGER},
      </if>
      <if test="record.fileFailCode != null" >
        file_fail_code = #{record.fileFailCode,jdbcType=VARCHAR},
      </if>
      <if test="record.failFileName != null" >
        fail_file_name = #{record.failFileName,jdbcType=VARCHAR},
      </if>
      <if test="record.failFilePath != null" >
        fail_file_path = #{record.failFilePath,jdbcType=VARCHAR},
      </if>
      <if test="record.dubboGroup != null" >
        dubbo_group = #{record.dubboGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.dubboVersion != null" >
        dubbo_version = #{record.dubboVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.userendip != null" >
        userEndIp = #{record.userendip,jdbcType=VARCHAR},
      </if>
      <if test="record.merchOrderNo != null" >
        merch_order_no = #{record.merchOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.behalfType != null" >
        behalf_type = #{record.behalfType,jdbcType=VARCHAR},
      </if>
      <if test="record.payerUserId != null" >
        payer_user_id = #{record.payerUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.behalfCountPublic != null" >
        behalf_count_public = #{record.behalfCountPublic,jdbcType=INTEGER},
      </if>
      <if test="record.itemCounterFeePublic != null" >
        item_counter_fee_public = #{record.itemCounterFeePublic,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update batch_behalf
    set id = #{record.id,jdbcType=BIGINT},
      biz_no = #{record.bizNo,jdbcType=VARCHAR},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      gid = #{record.gid,jdbcType=VARCHAR},
      inlet = #{record.inlet,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      merchant_acc_no = #{record.merchantAccNo,jdbcType=VARCHAR},
      merchant_card_no = #{record.merchantCardNo,jdbcType=VARCHAR},
      merchant_order_no = #{record.merchantOrderNo,jdbcType=VARCHAR},
      merchant_user_id = #{record.merchantUserId,jdbcType=VARCHAR},
      product_code = #{record.productCode,jdbcType=VARCHAR},
      product_status = #{record.productStatus,jdbcType=VARCHAR},
      all_file_name = #{record.allFileName,jdbcType=VARCHAR},
      all_file_path = #{record.allFilePath,jdbcType=VARCHAR},
      behalf_amt = #{record.behalfAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      behalf_count = #{record.behalfCount,jdbcType=INTEGER},
      counter_fee = #{record.counterFee,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      fail_reason = #{record.failReason,jdbcType=VARCHAR},
      failure_amt = #{record.failureAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      failure_count = #{record.failureCount,jdbcType=INTEGER},
      freeze_no = #{record.freezeNo,jdbcType=VARCHAR},
      frozen_no = #{record.frozenNo,jdbcType=VARCHAR},
      item_counter_fee = #{record.itemCounterFee,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      name = #{record.name,jdbcType=VARCHAR},
      success_amt = #{record.successAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      success_count = #{record.successCount,jdbcType=INTEGER},
      file_fail_code = #{record.fileFailCode,jdbcType=VARCHAR},
      fail_file_name = #{record.failFileName,jdbcType=VARCHAR},
      fail_file_path = #{record.failFilePath,jdbcType=VARCHAR},
      dubbo_group = #{record.dubboGroup,jdbcType=VARCHAR},
      dubbo_version = #{record.dubboVersion,jdbcType=VARCHAR},
      userEndIp = #{record.userendip,jdbcType=VARCHAR},
      merch_order_no = #{record.merchOrderNo,jdbcType=VARCHAR},
      behalf_type = #{record.behalfType,jdbcType=VARCHAR},
      payer_user_id = #{record.payerUserId,jdbcType=VARCHAR},
      behalf_count_public = #{record.behalfCountPublic,jdbcType=INTEGER},
      item_counter_fee_public = #{record.itemCounterFeePublic,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="gen.doproject.commonproducts.BatchBehalfDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update batch_behalf
    <set >
      <if test="bizNo != null" >
        biz_no = #{bizNo,jdbcType=VARCHAR},
      </if>
      <if test="rawAddTime != null" >
        raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null" >
        raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gid != null" >
        gid = #{gid,jdbcType=VARCHAR},
      </if>
      <if test="inlet != null" >
        inlet = #{inlet,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="merchantAccNo != null" >
        merchant_acc_no = #{merchantAccNo,jdbcType=VARCHAR},
      </if>
      <if test="merchantCardNo != null" >
        merchant_card_no = #{merchantCardNo,jdbcType=VARCHAR},
      </if>
      <if test="merchantOrderNo != null" >
        merchant_order_no = #{merchantOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="merchantUserId != null" >
        merchant_user_id = #{merchantUserId,jdbcType=VARCHAR},
      </if>
      <if test="productCode != null" >
        product_code = #{productCode,jdbcType=VARCHAR},
      </if>
      <if test="productStatus != null" >
        product_status = #{productStatus,jdbcType=VARCHAR},
      </if>
      <if test="allFileName != null" >
        all_file_name = #{allFileName,jdbcType=VARCHAR},
      </if>
      <if test="allFilePath != null" >
        all_file_path = #{allFilePath,jdbcType=VARCHAR},
      </if>
      <if test="behalfAmt != null" >
        behalf_amt = #{behalfAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="behalfCount != null" >
        behalf_count = #{behalfCount,jdbcType=INTEGER},
      </if>
      <if test="counterFee != null" >
        counter_fee = #{counterFee,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="failReason != null" >
        fail_reason = #{failReason,jdbcType=VARCHAR},
      </if>
      <if test="failureAmt != null" >
        failure_amt = #{failureAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="failureCount != null" >
        failure_count = #{failureCount,jdbcType=INTEGER},
      </if>
      <if test="freezeNo != null" >
        freeze_no = #{freezeNo,jdbcType=VARCHAR},
      </if>
      <if test="frozenNo != null" >
        frozen_no = #{frozenNo,jdbcType=VARCHAR},
      </if>
      <if test="itemCounterFee != null" >
        item_counter_fee = #{itemCounterFee,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="successAmt != null" >
        success_amt = #{successAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="successCount != null" >
        success_count = #{successCount,jdbcType=INTEGER},
      </if>
      <if test="fileFailCode != null" >
        file_fail_code = #{fileFailCode,jdbcType=VARCHAR},
      </if>
      <if test="failFileName != null" >
        fail_file_name = #{failFileName,jdbcType=VARCHAR},
      </if>
      <if test="failFilePath != null" >
        fail_file_path = #{failFilePath,jdbcType=VARCHAR},
      </if>
      <if test="dubboGroup != null" >
        dubbo_group = #{dubboGroup,jdbcType=VARCHAR},
      </if>
      <if test="dubboVersion != null" >
        dubbo_version = #{dubboVersion,jdbcType=VARCHAR},
      </if>
      <if test="userendip != null" >
        userEndIp = #{userendip,jdbcType=VARCHAR},
      </if>
      <if test="merchOrderNo != null" >
        merch_order_no = #{merchOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="behalfType != null" >
        behalf_type = #{behalfType,jdbcType=VARCHAR},
      </if>
      <if test="payerUserId != null" >
        payer_user_id = #{payerUserId,jdbcType=VARCHAR},
      </if>
      <if test="behalfCountPublic != null" >
        behalf_count_public = #{behalfCountPublic,jdbcType=INTEGER},
      </if>
      <if test="itemCounterFeePublic != null" >
        item_counter_fee_public = #{itemCounterFeePublic,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="gen.doproject.commonproducts.BatchBehalfDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update batch_behalf
    set biz_no = #{bizNo,jdbcType=VARCHAR},
      raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP},
      gid = #{gid,jdbcType=VARCHAR},
      inlet = #{inlet,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      merchant_acc_no = #{merchantAccNo,jdbcType=VARCHAR},
      merchant_card_no = #{merchantCardNo,jdbcType=VARCHAR},
      merchant_order_no = #{merchantOrderNo,jdbcType=VARCHAR},
      merchant_user_id = #{merchantUserId,jdbcType=VARCHAR},
      product_code = #{productCode,jdbcType=VARCHAR},
      product_status = #{productStatus,jdbcType=VARCHAR},
      all_file_name = #{allFileName,jdbcType=VARCHAR},
      all_file_path = #{allFilePath,jdbcType=VARCHAR},
      behalf_amt = #{behalfAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      behalf_count = #{behalfCount,jdbcType=INTEGER},
      counter_fee = #{counterFee,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      fail_reason = #{failReason,jdbcType=VARCHAR},
      failure_amt = #{failureAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      failure_count = #{failureCount,jdbcType=INTEGER},
      freeze_no = #{freezeNo,jdbcType=VARCHAR},
      frozen_no = #{frozenNo,jdbcType=VARCHAR},
      item_counter_fee = #{itemCounterFee,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      name = #{name,jdbcType=VARCHAR},
      success_amt = #{successAmt,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      success_count = #{successCount,jdbcType=INTEGER},
      file_fail_code = #{fileFailCode,jdbcType=VARCHAR},
      fail_file_name = #{failFileName,jdbcType=VARCHAR},
      fail_file_path = #{failFilePath,jdbcType=VARCHAR},
      dubbo_group = #{dubboGroup,jdbcType=VARCHAR},
      dubbo_version = #{dubboVersion,jdbcType=VARCHAR},
      userEndIp = #{userendip,jdbcType=VARCHAR},
      merch_order_no = #{merchOrderNo,jdbcType=VARCHAR},
      behalf_type = #{behalfType,jdbcType=VARCHAR},
      payer_user_id = #{payerUserId,jdbcType=VARCHAR},
      behalf_count_public = #{behalfCountPublic,jdbcType=INTEGER},
      item_counter_fee_public = #{itemCounterFeePublic,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>