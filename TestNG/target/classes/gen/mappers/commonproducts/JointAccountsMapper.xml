<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="gen.mappers.commonproducts.JointAccountsDAO" >
  <!--
   WARNING  - DONT MODIFY ANY GENERATED ELEMENTS IN THIS FILE
   if you want to add  new function ,plesae add a new element without  mbggenerated annotation marked comment
   the file generated by MyBatis Generator.
   @author bohr.qiu
  -->
  <resultMap id="BaseResultMap" type="gen.doproject.commonproducts.JointAccountsDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="raw_add_time" property="rawAddTime" jdbcType="TIMESTAMP" />
    <result column="raw_update_time" property="rawUpdateTime" jdbcType="TIMESTAMP" />
    <result column="enable" property="enable" jdbcType="BIGINT" />
    <result column="joint_account_no" property="jointAccountNo" jdbcType="VARCHAR" />
    <result column="sec_index" property="secIndex" jdbcType="VARCHAR" />
    <result column="joint_account_no_mask" property="jointAccountNoMask" jdbcType="VARCHAR" />
    <result column="merchant_card_no" property="merchantCardNo" jdbcType="VARCHAR" />
    <result column="notify_url" property="notifyUrl" jdbcType="VARCHAR" />
    <result column="use_for" property="useFor" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="user_real_name" property="userRealName" jdbcType="VARCHAR" />
    <result column="bank_code" property="bankCode" jdbcType="VARCHAR" />
    <result column="open_bank_name" property="openBankName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    id, raw_add_time, raw_update_time, enable, joint_account_no, sec_index, joint_account_no_mask, 
    merchant_card_no, notify_url, use_for, user_id, user_real_name, bank_code, open_bank_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="gen.doproject.commonproducts.JointAccountsDOExample" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from joint_accounts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select 
    <include refid="Base_Column_List" />
    from joint_accounts
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    delete from joint_accounts
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="gen.doproject.commonproducts.JointAccountsDOExample" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    delete from joint_accounts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="gen.doproject.commonproducts.JointAccountsDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into joint_accounts (raw_add_time, raw_update_time, enable, 
      joint_account_no, sec_index, joint_account_no_mask, 
      merchant_card_no, notify_url, use_for, 
      user_id, user_real_name, bank_code, 
      open_bank_name)
    values (#{rawAddTime,jdbcType=TIMESTAMP}, #{rawUpdateTime,jdbcType=TIMESTAMP}, #{enable,jdbcType=BIGINT}, 
      #{jointAccountNo,jdbcType=VARCHAR}, #{secIndex,jdbcType=VARCHAR}, #{jointAccountNoMask,jdbcType=VARCHAR}, 
      #{merchantCardNo,jdbcType=VARCHAR}, #{notifyUrl,jdbcType=VARCHAR}, #{useFor,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{userRealName,jdbcType=VARCHAR}, #{bankCode,jdbcType=VARCHAR}, 
      #{openBankName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="gen.doproject.commonproducts.JointAccountsDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into joint_accounts
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rawAddTime != null" >
        raw_add_time,
      </if>
      <if test="rawUpdateTime != null" >
        raw_update_time,
      </if>
      <if test="enable != null" >
        enable,
      </if>
      <if test="jointAccountNo != null" >
        joint_account_no,
      </if>
      <if test="secIndex != null" >
        sec_index,
      </if>
      <if test="jointAccountNoMask != null" >
        joint_account_no_mask,
      </if>
      <if test="merchantCardNo != null" >
        merchant_card_no,
      </if>
      <if test="notifyUrl != null" >
        notify_url,
      </if>
      <if test="useFor != null" >
        use_for,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="userRealName != null" >
        user_real_name,
      </if>
      <if test="bankCode != null" >
        bank_code,
      </if>
      <if test="openBankName != null" >
        open_bank_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rawAddTime != null" >
        #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null" >
        #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null" >
        #{enable,jdbcType=BIGINT},
      </if>
      <if test="jointAccountNo != null" >
        #{jointAccountNo,jdbcType=VARCHAR},
      </if>
      <if test="secIndex != null" >
        #{secIndex,jdbcType=VARCHAR},
      </if>
      <if test="jointAccountNoMask != null" >
        #{jointAccountNoMask,jdbcType=VARCHAR},
      </if>
      <if test="merchantCardNo != null" >
        #{merchantCardNo,jdbcType=VARCHAR},
      </if>
      <if test="notifyUrl != null" >
        #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="useFor != null" >
        #{useFor,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null" >
        #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null" >
        #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="openBankName != null" >
        #{openBankName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="gen.doproject.commonproducts.JointAccountsDOExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select count(*) from joint_accounts
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update joint_accounts
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.rawAddTime != null" >
        raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawUpdateTime != null" >
        raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enable != null" >
        enable = #{record.enable,jdbcType=BIGINT},
      </if>
      <if test="record.jointAccountNo != null" >
        joint_account_no = #{record.jointAccountNo,jdbcType=VARCHAR},
      </if>
      <if test="record.secIndex != null" >
        sec_index = #{record.secIndex,jdbcType=VARCHAR},
      </if>
      <if test="record.jointAccountNoMask != null" >
        joint_account_no_mask = #{record.jointAccountNoMask,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantCardNo != null" >
        merchant_card_no = #{record.merchantCardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.notifyUrl != null" >
        notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.useFor != null" >
        use_for = #{record.useFor,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.userRealName != null" >
        user_real_name = #{record.userRealName,jdbcType=VARCHAR},
      </if>
      <if test="record.bankCode != null" >
        bank_code = #{record.bankCode,jdbcType=VARCHAR},
      </if>
      <if test="record.openBankName != null" >
        open_bank_name = #{record.openBankName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update joint_accounts
    set id = #{record.id,jdbcType=BIGINT},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      enable = #{record.enable,jdbcType=BIGINT},
      joint_account_no = #{record.jointAccountNo,jdbcType=VARCHAR},
      sec_index = #{record.secIndex,jdbcType=VARCHAR},
      joint_account_no_mask = #{record.jointAccountNoMask,jdbcType=VARCHAR},
      merchant_card_no = #{record.merchantCardNo,jdbcType=VARCHAR},
      notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
      use_for = #{record.useFor,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=VARCHAR},
      user_real_name = #{record.userRealName,jdbcType=VARCHAR},
      bank_code = #{record.bankCode,jdbcType=VARCHAR},
      open_bank_name = #{record.openBankName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="gen.doproject.commonproducts.JointAccountsDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update joint_accounts
    <set >
      <if test="rawAddTime != null" >
        raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null" >
        raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enable != null" >
        enable = #{enable,jdbcType=BIGINT},
      </if>
      <if test="jointAccountNo != null" >
        joint_account_no = #{jointAccountNo,jdbcType=VARCHAR},
      </if>
      <if test="secIndex != null" >
        sec_index = #{secIndex,jdbcType=VARCHAR},
      </if>
      <if test="jointAccountNoMask != null" >
        joint_account_no_mask = #{jointAccountNoMask,jdbcType=VARCHAR},
      </if>
      <if test="merchantCardNo != null" >
        merchant_card_no = #{merchantCardNo,jdbcType=VARCHAR},
      </if>
      <if test="notifyUrl != null" >
        notify_url = #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="useFor != null" >
        use_for = #{useFor,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null" >
        user_real_name = #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="bankCode != null" >
        bank_code = #{bankCode,jdbcType=VARCHAR},
      </if>
      <if test="openBankName != null" >
        open_bank_name = #{openBankName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="gen.doproject.commonproducts.JointAccountsDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update joint_accounts
    set raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP},
      enable = #{enable,jdbcType=BIGINT},
      joint_account_no = #{jointAccountNo,jdbcType=VARCHAR},
      sec_index = #{secIndex,jdbcType=VARCHAR},
      joint_account_no_mask = #{jointAccountNoMask,jdbcType=VARCHAR},
      merchant_card_no = #{merchantCardNo,jdbcType=VARCHAR},
      notify_url = #{notifyUrl,jdbcType=VARCHAR},
      use_for = #{useFor,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      user_real_name = #{userRealName,jdbcType=VARCHAR},
      bank_code = #{bankCode,jdbcType=VARCHAR},
      open_bank_name = #{openBankName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>