<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="gen.mappers.commonproducts.TradeRefundInfoDAO" >
  <!--
   WARNING  - DONT MODIFY ANY GENERATED ELEMENTS IN THIS FILE
   if you want to add  new function ,plesae add a new element without  mbggenerated annotation marked comment
   the file generated by MyBatis Generator.
   @author bohr.qiu
  -->
  <resultMap id="BaseResultMap" type="gen.doproject.commonproducts.TradeRefundInfoDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="refund_biz_no" property="refundBizNo" jdbcType="VARCHAR" />
    <result column="inlet" property="inlet" jdbcType="VARCHAR" />
    <result column="gid" property="gid" jdbcType="VARCHAR" />
    <result column="partner_id" property="partnerId" jdbcType="VARCHAR" />
    <result column="merch_order_no" property="merchOrderNo" jdbcType="VARCHAR" />
    <result column="biz_no" property="bizNo" jdbcType="VARCHAR" />
    <result column="refund_amount" property="refundAmount" jdbcType="BIGINT" typeHandler="core.generatorName.MoneyTypeHandler" />
    <result column="buyer_user_id" property="buyerUserId" jdbcType="VARCHAR" />
    <result column="out_buyer_user_id" property="outBuyerUserId" jdbcType="VARCHAR" />
    <result column="seller_user_id" property="sellerUserId" jdbcType="VARCHAR" />
    <result column="payer_user_id" property="payerUserId" jdbcType="VARCHAR" />
    <result column="user_end_ip" property="userEndIp" jdbcType="VARCHAR" />
    <result column="mac_address" property="macAddress" jdbcType="VARCHAR" />
    <result column="user_terminal_type" property="userTerminalType" jdbcType="VARCHAR" />
    <result column="refund_status" property="refundStatus" jdbcType="VARCHAR" />
    <result column="refund_mode" property="refundMode" jdbcType="VARCHAR" />
    <result column="data_index" property="dataIndex" jdbcType="VARCHAR" />
    <result column="remittance_no" property="remittanceNo" jdbcType="VARCHAR" />
    <result column="offline_withdraw_no" property="offlineWithdrawNo" jdbcType="VARCHAR" />
    <result column="refund_reason" property="refundReason" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="raw_add_time" property="rawAddTime" jdbcType="TIMESTAMP" />
    <result column="raw_update_time" property="rawUpdateTime" jdbcType="TIMESTAMP" />
    <result column="contain_refund_share" property="containRefundShare" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.refundAmountCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.refundAmountCriteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    id, refund_biz_no, inlet, gid, partner_id, merch_order_no, biz_no, refund_amount, 
    buyer_user_id, out_buyer_user_id, seller_user_id, payer_user_id, user_end_ip, mac_address, 
    user_terminal_type, refund_status, refund_mode, data_index, remittance_no, offline_withdraw_no, 
    refund_reason, memo, raw_add_time, raw_update_time, contain_refund_share
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="gen.doproject.commonproducts.TradeRefundInfoDOExample" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trade_refund_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select 
    <include refid="Base_Column_List" />
    from trade_refund_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    delete from trade_refund_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="gen.doproject.commonproducts.TradeRefundInfoDOExample" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    delete from trade_refund_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="gen.doproject.commonproducts.TradeRefundInfoDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    insert into trade_refund_info (id, refund_biz_no, inlet, 
      gid, partner_id, merch_order_no, 
      biz_no, refund_amount, 
      buyer_user_id, out_buyer_user_id, seller_user_id, 
      payer_user_id, user_end_ip, mac_address, 
      user_terminal_type, refund_status, refund_mode, 
      data_index, remittance_no, offline_withdraw_no, 
      refund_reason, memo, raw_add_time, 
      raw_update_time, contain_refund_share)
    values (#{id,jdbcType=INTEGER}, #{refundBizNo,jdbcType=VARCHAR}, #{inlet,jdbcType=VARCHAR}, 
      #{gid,jdbcType=VARCHAR}, #{partnerId,jdbcType=VARCHAR}, #{merchOrderNo,jdbcType=VARCHAR}, 
      #{bizNo,jdbcType=VARCHAR}, #{refundAmount,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler}, 
      #{buyerUserId,jdbcType=VARCHAR}, #{outBuyerUserId,jdbcType=VARCHAR}, #{sellerUserId,jdbcType=VARCHAR}, 
      #{payerUserId,jdbcType=VARCHAR}, #{userEndIp,jdbcType=VARCHAR}, #{macAddress,jdbcType=VARCHAR}, 
      #{userTerminalType,jdbcType=VARCHAR}, #{refundStatus,jdbcType=VARCHAR}, #{refundMode,jdbcType=VARCHAR}, 
      #{dataIndex,jdbcType=VARCHAR}, #{remittanceNo,jdbcType=VARCHAR}, #{offlineWithdrawNo,jdbcType=VARCHAR}, 
      #{refundReason,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, #{rawAddTime,jdbcType=TIMESTAMP}, 
      #{rawUpdateTime,jdbcType=TIMESTAMP}, #{containRefundShare,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="gen.doproject.commonproducts.TradeRefundInfoDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    insert into trade_refund_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="refundBizNo != null" >
        refund_biz_no,
      </if>
      <if test="inlet != null" >
        inlet,
      </if>
      <if test="gid != null" >
        gid,
      </if>
      <if test="partnerId != null" >
        partner_id,
      </if>
      <if test="merchOrderNo != null" >
        merch_order_no,
      </if>
      <if test="bizNo != null" >
        biz_no,
      </if>
      <if test="refundAmount != null" >
        refund_amount,
      </if>
      <if test="buyerUserId != null" >
        buyer_user_id,
      </if>
      <if test="outBuyerUserId != null" >
        out_buyer_user_id,
      </if>
      <if test="sellerUserId != null" >
        seller_user_id,
      </if>
      <if test="payerUserId != null" >
        payer_user_id,
      </if>
      <if test="userEndIp != null" >
        user_end_ip,
      </if>
      <if test="macAddress != null" >
        mac_address,
      </if>
      <if test="userTerminalType != null" >
        user_terminal_type,
      </if>
      <if test="refundStatus != null" >
        refund_status,
      </if>
      <if test="refundMode != null" >
        refund_mode,
      </if>
      <if test="dataIndex != null" >
        data_index,
      </if>
      <if test="remittanceNo != null" >
        remittance_no,
      </if>
      <if test="offlineWithdrawNo != null" >
        offline_withdraw_no,
      </if>
      <if test="refundReason != null" >
        refund_reason,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="rawAddTime != null" >
        raw_add_time,
      </if>
      <if test="rawUpdateTime != null" >
        raw_update_time,
      </if>
      <if test="containRefundShare != null" >
        contain_refund_share,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="refundBizNo != null" >
        #{refundBizNo,jdbcType=VARCHAR},
      </if>
      <if test="inlet != null" >
        #{inlet,jdbcType=VARCHAR},
      </if>
      <if test="gid != null" >
        #{gid,jdbcType=VARCHAR},
      </if>
      <if test="partnerId != null" >
        #{partnerId,jdbcType=VARCHAR},
      </if>
      <if test="merchOrderNo != null" >
        #{merchOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="bizNo != null" >
        #{bizNo,jdbcType=VARCHAR},
      </if>
      <if test="refundAmount != null" >
        #{refundAmount,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="buyerUserId != null" >
        #{buyerUserId,jdbcType=VARCHAR},
      </if>
      <if test="outBuyerUserId != null" >
        #{outBuyerUserId,jdbcType=VARCHAR},
      </if>
      <if test="sellerUserId != null" >
        #{sellerUserId,jdbcType=VARCHAR},
      </if>
      <if test="payerUserId != null" >
        #{payerUserId,jdbcType=VARCHAR},
      </if>
      <if test="userEndIp != null" >
        #{userEndIp,jdbcType=VARCHAR},
      </if>
      <if test="macAddress != null" >
        #{macAddress,jdbcType=VARCHAR},
      </if>
      <if test="userTerminalType != null" >
        #{userTerminalType,jdbcType=VARCHAR},
      </if>
      <if test="refundStatus != null" >
        #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="refundMode != null" >
        #{refundMode,jdbcType=VARCHAR},
      </if>
      <if test="dataIndex != null" >
        #{dataIndex,jdbcType=VARCHAR},
      </if>
      <if test="remittanceNo != null" >
        #{remittanceNo,jdbcType=VARCHAR},
      </if>
      <if test="offlineWithdrawNo != null" >
        #{offlineWithdrawNo,jdbcType=VARCHAR},
      </if>
      <if test="refundReason != null" >
        #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="rawAddTime != null" >
        #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null" >
        #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="containRefundShare != null" >
        #{containRefundShare,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="gen.doproject.commonproducts.TradeRefundInfoDOExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select count(*) from trade_refund_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update trade_refund_info
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.refundBizNo != null" >
        refund_biz_no = #{record.refundBizNo,jdbcType=VARCHAR},
      </if>
      <if test="record.inlet != null" >
        inlet = #{record.inlet,jdbcType=VARCHAR},
      </if>
      <if test="record.gid != null" >
        gid = #{record.gid,jdbcType=VARCHAR},
      </if>
      <if test="record.partnerId != null" >
        partner_id = #{record.partnerId,jdbcType=VARCHAR},
      </if>
      <if test="record.merchOrderNo != null" >
        merch_order_no = #{record.merchOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.bizNo != null" >
        biz_no = #{record.bizNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundAmount != null" >
        refund_amount = #{record.refundAmount,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="record.buyerUserId != null" >
        buyer_user_id = #{record.buyerUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.outBuyerUserId != null" >
        out_buyer_user_id = #{record.outBuyerUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.sellerUserId != null" >
        seller_user_id = #{record.sellerUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.payerUserId != null" >
        payer_user_id = #{record.payerUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.userEndIp != null" >
        user_end_ip = #{record.userEndIp,jdbcType=VARCHAR},
      </if>
      <if test="record.macAddress != null" >
        mac_address = #{record.macAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.userTerminalType != null" >
        user_terminal_type = #{record.userTerminalType,jdbcType=VARCHAR},
      </if>
      <if test="record.refundStatus != null" >
        refund_status = #{record.refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.refundMode != null" >
        refund_mode = #{record.refundMode,jdbcType=VARCHAR},
      </if>
      <if test="record.dataIndex != null" >
        data_index = #{record.dataIndex,jdbcType=VARCHAR},
      </if>
      <if test="record.remittanceNo != null" >
        remittance_no = #{record.remittanceNo,jdbcType=VARCHAR},
      </if>
      <if test="record.offlineWithdrawNo != null" >
        offline_withdraw_no = #{record.offlineWithdrawNo,jdbcType=VARCHAR},
      </if>
      <if test="record.refundReason != null" >
        refund_reason = #{record.refundReason,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.rawAddTime != null" >
        raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawUpdateTime != null" >
        raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.containRefundShare != null" >
        contain_refund_share = #{record.containRefundShare,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update trade_refund_info
    set id = #{record.id,jdbcType=INTEGER},
      refund_biz_no = #{record.refundBizNo,jdbcType=VARCHAR},
      inlet = #{record.inlet,jdbcType=VARCHAR},
      gid = #{record.gid,jdbcType=VARCHAR},
      partner_id = #{record.partnerId,jdbcType=VARCHAR},
      merch_order_no = #{record.merchOrderNo,jdbcType=VARCHAR},
      biz_no = #{record.bizNo,jdbcType=VARCHAR},
      refund_amount = #{record.refundAmount,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      buyer_user_id = #{record.buyerUserId,jdbcType=VARCHAR},
      out_buyer_user_id = #{record.outBuyerUserId,jdbcType=VARCHAR},
      seller_user_id = #{record.sellerUserId,jdbcType=VARCHAR},
      payer_user_id = #{record.payerUserId,jdbcType=VARCHAR},
      user_end_ip = #{record.userEndIp,jdbcType=VARCHAR},
      mac_address = #{record.macAddress,jdbcType=VARCHAR},
      user_terminal_type = #{record.userTerminalType,jdbcType=VARCHAR},
      refund_status = #{record.refundStatus,jdbcType=VARCHAR},
      refund_mode = #{record.refundMode,jdbcType=VARCHAR},
      data_index = #{record.dataIndex,jdbcType=VARCHAR},
      remittance_no = #{record.remittanceNo,jdbcType=VARCHAR},
      offline_withdraw_no = #{record.offlineWithdrawNo,jdbcType=VARCHAR},
      refund_reason = #{record.refundReason,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      contain_refund_share = #{record.containRefundShare,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="gen.doproject.commonproducts.TradeRefundInfoDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update trade_refund_info
    <set >
      <if test="refundBizNo != null" >
        refund_biz_no = #{refundBizNo,jdbcType=VARCHAR},
      </if>
      <if test="inlet != null" >
        inlet = #{inlet,jdbcType=VARCHAR},
      </if>
      <if test="gid != null" >
        gid = #{gid,jdbcType=VARCHAR},
      </if>
      <if test="partnerId != null" >
        partner_id = #{partnerId,jdbcType=VARCHAR},
      </if>
      <if test="merchOrderNo != null" >
        merch_order_no = #{merchOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="bizNo != null" >
        biz_no = #{bizNo,jdbcType=VARCHAR},
      </if>
      <if test="refundAmount != null" >
        refund_amount = #{refundAmount,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="buyerUserId != null" >
        buyer_user_id = #{buyerUserId,jdbcType=VARCHAR},
      </if>
      <if test="outBuyerUserId != null" >
        out_buyer_user_id = #{outBuyerUserId,jdbcType=VARCHAR},
      </if>
      <if test="sellerUserId != null" >
        seller_user_id = #{sellerUserId,jdbcType=VARCHAR},
      </if>
      <if test="payerUserId != null" >
        payer_user_id = #{payerUserId,jdbcType=VARCHAR},
      </if>
      <if test="userEndIp != null" >
        user_end_ip = #{userEndIp,jdbcType=VARCHAR},
      </if>
      <if test="macAddress != null" >
        mac_address = #{macAddress,jdbcType=VARCHAR},
      </if>
      <if test="userTerminalType != null" >
        user_terminal_type = #{userTerminalType,jdbcType=VARCHAR},
      </if>
      <if test="refundStatus != null" >
        refund_status = #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="refundMode != null" >
        refund_mode = #{refundMode,jdbcType=VARCHAR},
      </if>
      <if test="dataIndex != null" >
        data_index = #{dataIndex,jdbcType=VARCHAR},
      </if>
      <if test="remittanceNo != null" >
        remittance_no = #{remittanceNo,jdbcType=VARCHAR},
      </if>
      <if test="offlineWithdrawNo != null" >
        offline_withdraw_no = #{offlineWithdrawNo,jdbcType=VARCHAR},
      </if>
      <if test="refundReason != null" >
        refund_reason = #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="rawAddTime != null" >
        raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null" >
        raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="containRefundShare != null" >
        contain_refund_share = #{containRefundShare,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="gen.doproject.commonproducts.TradeRefundInfoDO" >
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update trade_refund_info
    set refund_biz_no = #{refundBizNo,jdbcType=VARCHAR},
      inlet = #{inlet,jdbcType=VARCHAR},
      gid = #{gid,jdbcType=VARCHAR},
      partner_id = #{partnerId,jdbcType=VARCHAR},
      merch_order_no = #{merchOrderNo,jdbcType=VARCHAR},
      biz_no = #{bizNo,jdbcType=VARCHAR},
      refund_amount = #{refundAmount,jdbcType=BIGINT,typeHandler=core.generatorName.MoneyTypeHandler},
      buyer_user_id = #{buyerUserId,jdbcType=VARCHAR},
      out_buyer_user_id = #{outBuyerUserId,jdbcType=VARCHAR},
      seller_user_id = #{sellerUserId,jdbcType=VARCHAR},
      payer_user_id = #{payerUserId,jdbcType=VARCHAR},
      user_end_ip = #{userEndIp,jdbcType=VARCHAR},
      mac_address = #{macAddress,jdbcType=VARCHAR},
      user_terminal_type = #{userTerminalType,jdbcType=VARCHAR},
      refund_status = #{refundStatus,jdbcType=VARCHAR},
      refund_mode = #{refundMode,jdbcType=VARCHAR},
      data_index = #{dataIndex,jdbcType=VARCHAR},
      remittance_no = #{remittanceNo,jdbcType=VARCHAR},
      offline_withdraw_no = #{offlineWithdrawNo,jdbcType=VARCHAR},
      refund_reason = #{refundReason,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP},
      contain_refund_share = #{containRefundShare,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>