<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="gen.mappers.commonproducts.FastPayShareProfitDAO">
  <!--
   WARNING  - DONT MODIFY ANY GENERATED ELEMENTS IN THIS FILE
   if you want to add  new function ,plesae add a new element without  mbggenerated annotation marked comment
   the file generated by MyBatis Generator.
   @author bohr.qiu
  -->
  <resultMap id="BaseResultMap" type="gen.doproject.commonproducts.FastPayShareProfitDO">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="biz_no" jdbcType="VARCHAR" property="bizNo" />
    <result column="share_biz_no" jdbcType="VARCHAR" property="shareBizNo" />
    <result column="transfer_no" jdbcType="VARCHAR" property="transferNo" />
    <result column="payer_user_id" jdbcType="VARCHAR" property="payerUserId" />
    <result column="payer_card_no" jdbcType="VARCHAR" property="payerCardNo" />
    <result column="payer_acc_no" jdbcType="VARCHAR" property="payerAccNo" />
    <result column="payee_user_id" jdbcType="VARCHAR" property="payeeUserId" />
    <result column="payee_card_no" jdbcType="VARCHAR" property="payeeCardNo" />
    <result column="payee_acc_no" jdbcType="VARCHAR" property="payeeAccNo" />
    <result column="share_amount" jdbcType="DECIMAL" property="shareAmount" typeHandler="core.generatorName.MoneyTypeHandler" />
    <result column="refund_amount" jdbcType="DECIMAL" property="refundAmount" typeHandler="core.generatorName.MoneyTypeHandler" />
    <result column="currency" jdbcType="VARCHAR" property="currency" />
    <result column="share_status" jdbcType="VARCHAR" property="shareStatus" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="raw_add_time" jdbcType="TIMESTAMP" property="rawAddTime" />
    <result column="raw_update_time" jdbcType="TIMESTAMP" property="rawUpdateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.shareAmountCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.refundAmountCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.shareAmountCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
            <foreach collection="criteria.refundAmountCriteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value,typeHandler=core.generatorName.MoneyTypeHandler} and #{criterion.secondValue,typeHandler=core.generatorName.MoneyTypeHandler}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem,typeHandler=core.generatorName.MoneyTypeHandler}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    id, biz_no, share_biz_no, transfer_no, payer_user_id, payer_card_no, payer_acc_no, 
    payee_user_id, payee_card_no, payee_acc_no, share_amount, refund_amount, currency, 
    share_status, memo, raw_add_time, raw_update_time
  </sql>
  <select id="selectByExample" parameterType="gen.doproject.commonproducts.FastPayShareProfitDOExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from fast_pay_share_profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select 
    <include refid="Base_Column_List" />
    from fast_pay_share_profit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    delete from fast_pay_share_profit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="gen.doproject.commonproducts.FastPayShareProfitDOExample">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    delete from fast_pay_share_profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="gen.doproject.commonproducts.FastPayShareProfitDO">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fast_pay_share_profit (biz_no, share_biz_no, transfer_no, 
      payer_user_id, payer_card_no, payer_acc_no, 
      payee_user_id, payee_card_no, payee_acc_no, 
      share_amount, 
      refund_amount, 
      currency, share_status, memo, 
      raw_add_time, raw_update_time)
    values (#{bizNo,jdbcType=VARCHAR}, #{shareBizNo,jdbcType=VARCHAR}, #{transferNo,jdbcType=VARCHAR}, 
      #{payerUserId,jdbcType=VARCHAR}, #{payerCardNo,jdbcType=VARCHAR}, #{payerAccNo,jdbcType=VARCHAR}, 
      #{payeeUserId,jdbcType=VARCHAR}, #{payeeCardNo,jdbcType=VARCHAR}, #{payeeAccNo,jdbcType=VARCHAR}, 
      #{shareAmount,jdbcType=DECIMAL,typeHandler=core.generatorName.MoneyTypeHandler}, 
      #{refundAmount,jdbcType=DECIMAL,typeHandler=core.generatorName.MoneyTypeHandler}, 
      #{currency,jdbcType=VARCHAR}, #{shareStatus,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, 
      #{rawAddTime,jdbcType=TIMESTAMP}, #{rawUpdateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="gen.doproject.commonproducts.FastPayShareProfitDO">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into fast_pay_share_profit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bizNo != null">
        biz_no,
      </if>
      <if test="shareBizNo != null">
        share_biz_no,
      </if>
      <if test="transferNo != null">
        transfer_no,
      </if>
      <if test="payerUserId != null">
        payer_user_id,
      </if>
      <if test="payerCardNo != null">
        payer_card_no,
      </if>
      <if test="payerAccNo != null">
        payer_acc_no,
      </if>
      <if test="payeeUserId != null">
        payee_user_id,
      </if>
      <if test="payeeCardNo != null">
        payee_card_no,
      </if>
      <if test="payeeAccNo != null">
        payee_acc_no,
      </if>
      <if test="shareAmount != null">
        share_amount,
      </if>
      <if test="refundAmount != null">
        refund_amount,
      </if>
      <if test="currency != null">
        currency,
      </if>
      <if test="shareStatus != null">
        share_status,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="rawAddTime != null">
        raw_add_time,
      </if>
      <if test="rawUpdateTime != null">
        raw_update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bizNo != null">
        #{bizNo,jdbcType=VARCHAR},
      </if>
      <if test="shareBizNo != null">
        #{shareBizNo,jdbcType=VARCHAR},
      </if>
      <if test="transferNo != null">
        #{transferNo,jdbcType=VARCHAR},
      </if>
      <if test="payerUserId != null">
        #{payerUserId,jdbcType=VARCHAR},
      </if>
      <if test="payerCardNo != null">
        #{payerCardNo,jdbcType=VARCHAR},
      </if>
      <if test="payerAccNo != null">
        #{payerAccNo,jdbcType=VARCHAR},
      </if>
      <if test="payeeUserId != null">
        #{payeeUserId,jdbcType=VARCHAR},
      </if>
      <if test="payeeCardNo != null">
        #{payeeCardNo,jdbcType=VARCHAR},
      </if>
      <if test="payeeAccNo != null">
        #{payeeAccNo,jdbcType=VARCHAR},
      </if>
      <if test="shareAmount != null">
        #{shareAmount,jdbcType=DECIMAL,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=DECIMAL,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="shareStatus != null">
        #{shareStatus,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="rawAddTime != null">
        #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null">
        #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="gen.doproject.commonproducts.FastPayShareProfitDOExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    select count(*) from fast_pay_share_profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update fast_pay_share_profit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.bizNo != null">
        biz_no = #{record.bizNo,jdbcType=VARCHAR},
      </if>
      <if test="record.shareBizNo != null">
        share_biz_no = #{record.shareBizNo,jdbcType=VARCHAR},
      </if>
      <if test="record.transferNo != null">
        transfer_no = #{record.transferNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payerUserId != null">
        payer_user_id = #{record.payerUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.payerCardNo != null">
        payer_card_no = #{record.payerCardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payerAccNo != null">
        payer_acc_no = #{record.payerAccNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payeeUserId != null">
        payee_user_id = #{record.payeeUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.payeeCardNo != null">
        payee_card_no = #{record.payeeCardNo,jdbcType=VARCHAR},
      </if>
      <if test="record.payeeAccNo != null">
        payee_acc_no = #{record.payeeAccNo,jdbcType=VARCHAR},
      </if>
      <if test="record.shareAmount != null">
        share_amount = #{record.shareAmount,jdbcType=DECIMAL,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="record.refundAmount != null">
        refund_amount = #{record.refundAmount,jdbcType=DECIMAL,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="record.currency != null">
        currency = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.shareStatus != null">
        share_status = #{record.shareStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null">
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.rawAddTime != null">
        raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rawUpdateTime != null">
        raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update fast_pay_share_profit
    set id = #{record.id,jdbcType=INTEGER},
      biz_no = #{record.bizNo,jdbcType=VARCHAR},
      share_biz_no = #{record.shareBizNo,jdbcType=VARCHAR},
      transfer_no = #{record.transferNo,jdbcType=VARCHAR},
      payer_user_id = #{record.payerUserId,jdbcType=VARCHAR},
      payer_card_no = #{record.payerCardNo,jdbcType=VARCHAR},
      payer_acc_no = #{record.payerAccNo,jdbcType=VARCHAR},
      payee_user_id = #{record.payeeUserId,jdbcType=VARCHAR},
      payee_card_no = #{record.payeeCardNo,jdbcType=VARCHAR},
      payee_acc_no = #{record.payeeAccNo,jdbcType=VARCHAR},
      share_amount = #{record.shareAmount,jdbcType=DECIMAL,typeHandler=core.generatorName.MoneyTypeHandler},
      refund_amount = #{record.refundAmount,jdbcType=DECIMAL,typeHandler=core.generatorName.MoneyTypeHandler},
      currency = #{record.currency,jdbcType=VARCHAR},
      share_status = #{record.shareStatus,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      raw_add_time = #{record.rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{record.rawUpdateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="gen.doproject.commonproducts.FastPayShareProfitDO">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update fast_pay_share_profit
    <set>
      <if test="bizNo != null">
        biz_no = #{bizNo,jdbcType=VARCHAR},
      </if>
      <if test="shareBizNo != null">
        share_biz_no = #{shareBizNo,jdbcType=VARCHAR},
      </if>
      <if test="transferNo != null">
        transfer_no = #{transferNo,jdbcType=VARCHAR},
      </if>
      <if test="payerUserId != null">
        payer_user_id = #{payerUserId,jdbcType=VARCHAR},
      </if>
      <if test="payerCardNo != null">
        payer_card_no = #{payerCardNo,jdbcType=VARCHAR},
      </if>
      <if test="payerAccNo != null">
        payer_acc_no = #{payerAccNo,jdbcType=VARCHAR},
      </if>
      <if test="payeeUserId != null">
        payee_user_id = #{payeeUserId,jdbcType=VARCHAR},
      </if>
      <if test="payeeCardNo != null">
        payee_card_no = #{payeeCardNo,jdbcType=VARCHAR},
      </if>
      <if test="payeeAccNo != null">
        payee_acc_no = #{payeeAccNo,jdbcType=VARCHAR},
      </if>
      <if test="shareAmount != null">
        share_amount = #{shareAmount,jdbcType=DECIMAL,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="refundAmount != null">
        refund_amount = #{refundAmount,jdbcType=DECIMAL,typeHandler=core.generatorName.MoneyTypeHandler},
      </if>
      <if test="currency != null">
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="shareStatus != null">
        share_status = #{shareStatus,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="rawAddTime != null">
        raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rawUpdateTime != null">
        raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="gen.doproject.commonproducts.FastPayShareProfitDO">
    <!--
      WARNING - @mbggenerated
      DONT MODIFY!
    -->
    update fast_pay_share_profit
    set biz_no = #{bizNo,jdbcType=VARCHAR},
      share_biz_no = #{shareBizNo,jdbcType=VARCHAR},
      transfer_no = #{transferNo,jdbcType=VARCHAR},
      payer_user_id = #{payerUserId,jdbcType=VARCHAR},
      payer_card_no = #{payerCardNo,jdbcType=VARCHAR},
      payer_acc_no = #{payerAccNo,jdbcType=VARCHAR},
      payee_user_id = #{payeeUserId,jdbcType=VARCHAR},
      payee_card_no = #{payeeCardNo,jdbcType=VARCHAR},
      payee_acc_no = #{payeeAccNo,jdbcType=VARCHAR},
      share_amount = #{shareAmount,jdbcType=DECIMAL,typeHandler=core.generatorName.MoneyTypeHandler},
      refund_amount = #{refundAmount,jdbcType=DECIMAL,typeHandler=core.generatorName.MoneyTypeHandler},
      currency = #{currency,jdbcType=VARCHAR},
      share_status = #{shareStatus,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      raw_add_time = #{rawAddTime,jdbcType=TIMESTAMP},
      raw_update_time = #{rawUpdateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--
   WARNING  - DONT MODIFY ANY GENERATED ELEMENTS IN THIS FILE
   if you want to add  new function ,plesae add a new element without  mbggenerated annotation marked comment
   the file generated by MyBatis Generator.
   @author bohr.qiu
  -->
</mapper>